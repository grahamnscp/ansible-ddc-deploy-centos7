---

# Only setup firewall and restart docker if UCP has not already been deployed.  ie reruning playbook
- stat: path=/root/swarm-replica-join.log
  register: ucp_install_log

- include: dtr-iptables.yml
  when: ucp_install_log.stat.exists == False


# Join swarm cluster as worker

- name: "Wait for UCP controller to come up"
  uri:
    url: "https://{{ hostvars[groups['ucp-primary'][0]]['ansible_eth0']['ipv4']['address'] }}/_ping"
    validate_certs: no
  register: ucp_primary
  until: ucp_primary.status == 200
  retries: 50
  delay: 2

- name: "Creating script to pull docker ucp worker images"
  template:
    src: pull-ucp-worker-images.sh.j2
    dest: /root/pull-ucp-worker-images.sh
    owner: root
    group: root
    mode: 0755

- name: "Pulling docker ucp images needed for swarm join.."
  shell: sh /root/pull-ucp-worker-images.sh {{ docker_hub_username|quote}} {{ docker_hub_password|quote }} > /root/pull-ucp-worker-images.log 2>&1
  args:
    executable: /bin/bash
    chdir: /root
    creates: /root/pull-ucp-worker-images.log


- name: "Join dtr node to swarm"
  shell: /bin/docker swarm join --token {{ hostvars[groups['ucp-primary'][0]]['worker_token'].stdout }} {{ hostvars[groups['ucp-primary'][0]]['ansible_eth0']['ipv4']['address'] }} 2>&1 ; sleep 180 | /bin/tee -a /root/swarm-replica-join.log 
  args:
    creates: /root/swarm-replica-join.log


# Pull DTR images ahead of install..
- name: "Creating script to pull docker dtr images"
  template:
    src: pull-dtr-images.sh.j2
    dest: /root/pull-dtr-images.sh
    owner: root
    group: root
    mode: 0755

- name: "Pulling docker dtr images needed for install.."
  shell: sh /root/pull-dtr-images.sh {{ docker_hub_username|quote}} {{ docker_hub_password|quote }} > /root/pull-dtr-images.log 2>&1
  args:
    executable: /bin/bash
    chdir: /root
    creates: /root/pull-dtr-images.log

